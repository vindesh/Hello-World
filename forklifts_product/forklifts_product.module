<?php

/**
 * Implementation of hook_perm().
 */
function forklifts_product_perm() {
  return array('product fields settings access');
}


/**
 * Implementation of hook_menu().
 */
function forklifts_product_menu() {    
  $items = array();  

  $items['product/fields/settings'] = array(
      'title' => t('Product fields'),
      'page callback' => 'product_fields',
      //'page arguments' => array('product_fields'),
      'access callback' => 'user_access',
      'access arguments' => array('product fields settings access'),
      'type' => MENU_CALLBACK,       
  );
  
  $items['product/fields/category_popup/lightbox2'] = array(
	'page callback' => 'product_fields_to_category_popup',
	'page callback' => 'product_category_popup',
    	'access arguments' => 'access administration pages',
	'access callback' => TRUE,
        'type' => MENU_CALLBACK,  
	
	/*'page callback' => 'drupal_get_form',
    	'page arguments' => array('product_category_popup_form'),
        'access arguments' => 'access administration pages',
	'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,   */
  );
  

 return $items;
}

function forklift_product_theme()
{
  return array(
	'product_category_popup_form' => array(
	   'arguments' => array('links' => NULL),
	   'template' => 'product-fields-category_popup-lightbox2',
	),
      );
}

function product_fields(){
  $product_fields = content_fields('', 'product');
  foreach($product_fields as $field => $attr){
    if($attr['type_name'] == 'product')
      $fields[$field] = $attr['widget']['label'];
  }
  //module_load_include('inc', 'node_import', 'node_import');  
  
  drupal_add_js(drupal_get_path('module', 'fields_to_category')  .'/fields_to_category.js');
  
  
  
  $header = array('Sno', 'Form', 'Title', 'Field Key', 'category');
  $rows = array();
  $sno = 1;
  foreach($product_fields as $field => $attr) {
    if($attr['type_name'] == 'product') {
      $field_setting_id = get_field_setting_id('product', $field);
      $html =  l('Click to select category',  url('product/fields/category_popup/lightbox2', array('absolute' => TRUE)), array('query' => 'id='.($field_setting_id).'&type='.$attr['type_name'].'&fieldname='.$field, 'attributes' => array( 'rel' => 'lightframe[|width:450; height:300px; scrolling: auto;]' ) )  );
      $rows[] = array($sno++, $attr['type_name'], $attr['widget']['label'], $field, $html);
    }
  }  
  $output = theme_table($header, $rows);
  //$output .= theme('pager', NULL, 20, 0);
  print theme('page', $output);
}

function get_field_setting_id($type = NULL, $field_name = NULL, $category = NULL){
  if($category == NULL){
    return db_result(db_query("select id from {admin_form_fields} where admin_fields_form = '%s' AND admin_fields_field_key = '%s'", $type, $field_name));
  }else{
   //print sprintf("select id from {admin_form_fields} where admin_fields_form = '%s' AND admin_fields_field_key = '%s' AND category_id IN ('%s')", $type, $field_name, $category);
    return db_result(db_query("select id from {admin_form_fields} where admin_fields_form = '%s' AND admin_fields_field_key = '%s' AND category_id IN (%d)", $type, $field_name, $category));
  }
}


function product_category_popup(){
  print drupal_get_form('product_category_popup_form');
}

function product_category_popup_form() {
  $selected_cat = array();
  $arg = $_GET['id'];
  if(!empty($arg)){
    $sql = "SELECT category_id FROM {admin_form_fields} WHERE id = '".$_GET['id']."'";
    $result = db_query($sql);
    $row = db_fetch_array($result);
    $pieces = explode(",", $row['category_id']);
    
    for($i = 0; $i< count($pieces); $i++)
    {
      $selected_cat[]  =  $pieces[$i];
    }
  }  
    $form = array();
    
    $form['taxonomy_dropdown'] = taxonomy_form(5);
    $form['taxonomy_dropdown']['#multiple'] = true;
    $form['taxonomy_dropdown']['#default_value'] = $selected_cat;    
    $form['id'] = array('#type' => 'hidden', '#value' => $_GET['id']);
    
    $form['form_name'] = array('#type' => 'hidden', '#value' => $_GET['type']);
    $form['field_name'] = array('#type' => 'hidden', '#value' => $_GET['fieldname']);
    
    $form['zip_code_submit'] = array('#type' => 'submit', '#value' => t('Save'), '#weight' => 7);
    
    return $form;
}//fields_to_category_popup_form
  
function product_category_popup_form_submit($form, &$form_state) 
{
  //ptr($form_state['values']);
  if($form_state['values']['id']){
    $cat_id = implode(',', $form_state['values']['taxonomy_dropdown']);
    $sql = " UPDATE {admin_form_fields} SET category_id = '".$cat_id."' WHERE id = '".$form_state['values']['id']."' ";
    db_query($sql);
  }elseif($form_state['values']['form_name'] == 'product'){
    $cat_id = implode(',', $form_state['values']['taxonomy_dropdown']);
    $sql = "INSERT INTO {admin_form_fields} SET category_id = '%s', admin_fields_form = '%s', admin_fields_field_key = '%s'";
    db_query($sql, $cat_id, $form_state['values']['form_name'], $form_state['values']['field_name']);
  }

  print "<script> self.parent.location = self.parent.location; </script>";exit;
}


function ptr($array, $exit = 0){
  if($exit){
    print'<pre>';print_r($array);
  }else{
    print'<pre>';print_r($array);exit;
  }
}